---
/**
 * ThemeToggle.astro
 * Adds a floating button to toggle light/dark theme.
 * - Persists preference in localStorage ('theme' = 'dark' | 'light')
 * - Toggles the 'dark' class on <html> (document.documentElement)
 */
const { className = "" } = Astro.props;
---

<button
  id="theme-toggle"
  class={`fixed bottom-5 right-5 z-50 inline-flex items-center gap-2 rounded-full border border-slate-200 bg-white/80 px-4 py-2 text-sm font-medium text-slate-800 shadow-sm backdrop-blur hover:bg-white dark:border-white/15 dark:bg-slate-800/80 dark:text-slate-100 ${className}`}
  aria-label="Toggle dark mode"
  aria-pressed="false"
>
  <!-- Icons -->
  <svg
    id="icon-sun"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="lucide lucide-sun-icon lucide-sun h-5 w-5 hidden dark:inline"
  >
    <circle cx="12" cy="12" r="4"></circle>
    <path d="M12 2v2"></path><path d="M12 20v2"></path>
    <path d="m4.93 4.93 1.41 1.41"></path><path d="m17.66 17.66 1.41 1.41"
    ></path>
    <path d="M2 12h2"></path><path d="M20 12h2"></path>
    <path d="m6.34 17.66-1.41 1.41"></path>
    <path d="m19.07 4.93-1.41 1.41"></path>
  </svg>

  <svg
    id="icon-moon"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="lucide lucide-moon-icon lucide-moon h-5 w-5 dark:hidden"
    ><path
      d="M20.985 12.486a9 9 0 1 1-9.473-9.472c.405-.022.617.46.402.803a6 6 0 0 0 8.268 8.268c.344-.215.825-.004.803.401"
    ></path>
  </svg>

  <span id="theme-label" class="select-none">Theme</span>
</button>

<script is:inline>
  (function () {
    try {
      const btn = document.getElementById("theme-toggle");
      const label = document.getElementById("theme-label");

      function setTheme(dark) {
        document.documentElement.classList.toggle("dark", dark);
        localStorage.setItem("theme", dark ? "dark" : "light");
        if (btn) btn.setAttribute("aria-pressed", String(dark));
        if (label) label.textContent = dark ? "Dark" : "Light";
      }

      function getPreferred() {
        const t = localStorage.getItem("theme");
        if (t === "dark") return true;
        if (t === "light") return false;
        return (
          window.matchMedia &&
          window.matchMedia("(prefers-color-scheme: dark)").matches
        );
      }

      // Initialize
      setTheme(getPreferred());

      // Listen for click
      btn?.addEventListener("click", () => {
        const isDark = document.documentElement.classList.contains("dark");
        setTheme(!isDark);
      });

      // React to system changes (optional)
      if (window.matchMedia) {
        const mq = window.matchMedia("(prefers-color-scheme: dark)");
        mq.addEventListener?.("change", (e) => {
          // Only auto-apply if user hasn't explicitly chosen a theme
          const t = localStorage.getItem("theme");
          if (!t) setTheme(e.matches);
        });
      }
    } catch (e) {
      // fail silently
    }
  })();
</script>
